@{
    string thumbnailUrl = string.Empty;
    string postTitle = string.Empty;

    if (Model.ContentItem.Content.Post.Thumbnail.Paths != null && Model.ContentItem.Content.Post.Thumbnail.Paths.Count > 0)
    {
        thumbnailUrl = Model.ContentItem.Content.Post.Thumbnail.Paths[0];
    }

    postTitle = Model.ContentItem.Content.TitlePart.Title;
}

@functions {
    string FormatDate(DateTime date)
    {
        return date.ToString("dd.MM.yy");
    }
}

<article class="post content-item post--summary">
    <ul class="list flex flex--direction-column flex--direction-row@medium flex--align-center@medium">
        <li class="list__item">
            @if (!string.IsNullOrEmpty(thumbnailUrl))
            {
                <img asset-src="@thumbnailUrl" alt="Thumbnail for @postTitle blog post" class="box box--thumbnail bg--color-grey shadow--box-light" />
            }
            else
            {
                <img src="/Themes/Moov2/Content/blog-default-image.jpg" alt="Thumbnail for @postTitle blog post" class="box box--thumbnail bg--color-grey shadow--box-light" />
            }
        </li>

        <li class="list__item margin--left@medium">
            @if (Model.Header != null)
            {
                @await DisplayAsync(Model.Header)
            }

            <p class="text--small text--grey">@FormatDate(Model.ContentItem.CreatedUtc) | @Model.ContentItem.Owner</p>

            @await DisplayAsync(Model.Content)

            @if (Model.Footer != null)
            {
                @await DisplayAsync(Model.Footer)
            }
        </li>
    </ul>
</article>